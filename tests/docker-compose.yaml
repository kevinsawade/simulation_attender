version: '3.7'

services:
  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    hostname: openldap.example.org
    domainname: example.org
    ports:
      - 389:389
      - 636:636
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=adminpassword
      - LDAP_USERS=user01,user02,slurm
      - LDAP_PASSWORDS=password1,password2,password
      - LDAP_CONFIG_ADMIN_ENABLED=yes
      - LDAP_CONFIG_ADMIN_USERNAME=admin
      - LDAP_CONFIG_ADMIN_PASSWORD=configpassword
      - LDAP_ENABLE_TLS=yes
      - LDAP_PORT_NUMBER=389
      - LDAP_LDAPS_PORT_NUMBER=636
      - LDAP_TLS_CERT_FILE=/certs/server.crt
      - LDAP_TLS_KEY_FILE=/certs/server.key
      - LDAP_TLS_CA_FILE=/certs/ca.crt
    volumes:
      - "$PWD/certs:/certs:Z"
      - "./openldap_data:/bitnami/openldap:Z"
    networks:
      default:
        aliases:
          - openldap.example.org


  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    domainname: example.org
    hostname: phpldapadmin
    ports:
      - 10080:80
      - 10443:443
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "true"
    depends_on:
      - openldap
    networks:
      default:
        aliases:
          - phpldapadmin.example.org


  mysql:
    image: mariadb:latest
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=sql_root_passw0rd
      - MYSQL_PASSWORD=sql_passw0rd
      - MYSQL_USER=mysql_user
      - MYSQL_DATABASE=mysql_db
    command: --innodb-buffer-pool-size=1024M --innodb-log-file-size=64M --innodb-lock-wait-timeout=900
    hostname: slurm-db.example.org
          

  client:
    image: kevinsawade/ldap-client
    container_name: client
    domainname: example.org
    hostname: client.example.org
    ports:
      - 223:22
    build:
      context: .
      dockerfile: ldap_client/Dockerfile
    environment:
      - LDAP_ADMIN_PASSWORD=adminpassword
    depends_on:
      - openldap
    networks:
      default:
        aliases:
          - client.example.org
    volumes:
      - "./nfs_mount:/home"

  # build the base image with munge
  slurm_base:
    image: kevinsawade/slurm-base
    container_name: slurm_base
    build:
      context: .
      dockerfile: slurm_base/Dockerfile
    command: echo "Build successfull. I will close now."


  slurm-db:
    build:
      context: .
      dockerfile: slurm_db/Dockerfile
    image: kevinsawade/slurm_db
    hostname: slurm-database.local.dev
    networks:
      - slurm
    volumes:
      - slurm-shared-vol:/work
    depends_on:
      - mysql
      - base


  slurm_master:
    image: kevinsawade/slurm-master
    container_name: slurm_master
    domainname: example.org
    hostname: slurm_master
    ports:
      - 222:22
    build:
      context: .
      dockerfile: slurm_master/Dockerfile
      args:
         - SLURM_VERSION=22.05.8
    environment:
      - LDAP_ADMIN_PASSWORD=adminpassword
    depends_on:
      - slurm_base
    networks:
      default:
        aliases:
          - slurm_master.example.org
    volumes:
      - "./nfs_mount:/home"


  # nfs2:
  #   image: kevinsawade/nfs-server
  #   build:
  #     context: .
  #     dockerfile: nfs_server/Dockerfile
  #   container_name: nfs-server-2
  #   domainname: example.org
  #   hostname: nfs2.example.org
  #   privileged: true
  #   cap_add:
  #     - CAP_SYS_ADMIN
  #   ports:
  #     - 2049:2049
  #   networks:
  #     default:
  #       aliases:
  #         - nfs2.example.org

  # nfs:
  #   image: erichough/nfs-server:latest
  #   container_name: nfs-server
  #   domainname: example.org
  #   hostname: nfs.example.org
  #   privileged: true
  #   cap_add:
  #     - CAP_SYS_ADMIN
  #   ports:
  #     - 2050:2049
  #   environment:
  #     - SHARED_DIRECTORY=/data
  #   networks:
  #     default:
  #       aliases:
  #         - nfs.example.org
  #   volumes:
  #     - "./nfs_mount:/home"
  #     - "./nfs_mount:/nfs"
  #     - "./nfs_server/exports:/etc/exports:ro"
